// Custom mixins

@mixin clearfix {
	&:before,
	&:after {
	    content:"";
	    display:table;
	}

	&:after {
	    clear:both;
	}

	/* For IE 6/7 (trigger hasLayout) */
	& {
	    *zoom:1;
	}
}

@mixin box ($padding: $box-inset) {
	background-color: #fff;
	padding: $padding;
	border: 1px solid #e2e2e2;
	border-bottom: 2px solid #e1e1e1;
	@include border-radius(3px);
}

// Respond mixin for including contents
// for other viewports.
//
// Usage:
// 	@include respond($small-screen) {
// 		/* code */
// 	}
//
// 	May be nested.
@mixin respond($width, $mode: "max") {
	@media only screen and (#{$mode}-width: $width) {
		@content;
	}
}

// Cross-browser keyframes mixin.

@mixin keyframes($name) {
	@-webkit-keyframes $name {
		@content;
	}

	@-moz-keyframes $name {
		@content;
	}

	@keyframes $name {
		@content;
	}
}

// Cross-browser CSS animation mixin.

@mixin animation($animation, $duration: 1s, $count: 1, $delay: 0s, $easing: "ease-out") {
	-webkit-animation: unquote($animation) $duration $delay $count unquote($easing) forwards;
	-moz-animation: unquote($animation) $duration $delay $count unquote($easing) forwards;
	animation: unquote($animation) $duration $delay $count unquote($easing) forwards;
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin rounded($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

// Functions

// Convert a unit to ems.
@function to_em($desired, $context: $font-size-base) {
	@return ($desired / $context) * 1em;
}

// Convert a unit to percentage.
@function to_percent($input, $target) {
	@return ($input / $target)*100%;
}
